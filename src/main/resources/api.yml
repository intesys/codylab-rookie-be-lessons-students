openapi: 3.0.1
info:
  title: Chat API
  version: v0
servers:
  - url: http://localhost:8081
    description: Generated server url
paths:
  /api/account:
    post:
      tags:
        - account-api
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
  /api/account/{id}:
    get:
      tags:
        - account-api
      operationId: getAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
    put:
      tags:
        - account-api
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - account-api
      operationId: deleteAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/account/filter:
    post:
      tags:
        - account-api
      operationId: getAccounts
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
  /api/chat:
    post:
      tags:
        - chat-api
      operationId: createChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Chat'
  /api/chat/{id}:
    get:
      tags:
        - chat-api
      operationId: getChat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Chat'
    put:
      tags:
        - chat-api
      operationId: updateChat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - chat-api
      operationId: deleteChat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/chat/filter:
    post:
      tags:
        - chat-api
      operationId: getChats
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/ChatFilter'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
  /api/message:
    post:
      tags:
        - message-api
      operationId: postMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
  /api/message/{id}:
    get:
      tags:
        - message-api
      operationId: getMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
        - message-api
      operationId: repostMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - message-api
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/message/filter:
    post:
      tags:
        - message-api
      operationId: getMessages
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/MessageFilter'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        alias:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Chat:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        memberIds:
          type: array
          items:
            type: integer
            format: int64
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        senderId:
          type: integer
          format: int64
        chatId:
          type: integer
          format: int64
        text:
          type: string
    ChatFilter:
      type: object
      properties:
        memberIds:
          type: array
          items:
            type: integer
            format: int64
    MessageFilter:
      type: object
      properties:
        chatId:
          type: integer
          format: int64
        text:
          type: string